

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
/**
 *
 * @author Zaid Yazadi
 */
public class RoomSchedulerGUI extends javax.swing.JDialog {

    /**
     * Creates new form RoomSchedulerGUI
     */
    public RoomSchedulerGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // Loads pre-exisitng Dates, Faculty, Reservations, and Waitlist
        ArrayList<java.sql.Date> d = Dates.getAllDates();
        java.text.SimpleDateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");
        for(int i = 0; i < d.size(); i++){
            dateReserveComboBox.addItem(df.format(d.get(i)));
            dateFilterComboBox.addItem(df.format(d.get(i)));
        }
        ArrayList<String> f = Faculty.getAllFaculty();
        checkStatusComboBox.addItem("");
        for(int i = 0; i < f.size(); i++){
            facultyNameComboBox.addItem(f.get(i));
            checkStatusComboBox.addItem(f.get(i));
        }
        ArrayList<ArrayList<String>> w = WaitlistQueries.getFullWaitlist();
        String msg  = "";
        for(int i = 0; i < w.size(); i++){
            msg += (i+1) + ") " + w.get(i).get(0) + " - Request for " 
                        + w.get(i).get(2) + " seats on " + w.get(i).get(1) + "\n\n";
        }
        waitlistTextArea.setText(msg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        addRoomNameTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        addRoomSeatsTextField = new javax.swing.JTextField();
        addRoomButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        addRoomStatusTextArea = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        addDateTextField = new javax.swing.JTextField();
        addDateButton = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        dropRoomTextField = new javax.swing.JTextField();
        dropRoomButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        facultyNameComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateReserveComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        numSeatsTextField = new javax.swing.JTextField();
        reserveButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomReservationStatusTextArea = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        checkStatusComboBox = new javax.swing.JComboBox<>();
        cancelComboBox = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        checkStatusTextArea = new javax.swing.JTextArea();
        cancelConfirmationButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        cancelWaitlistStatusTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateFilterComboBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        reservationCheckTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        waitlistTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room Scheduler");
        jLabel1.setToolTipText("");
        jLabel1.setMaximumSize(new java.awt.Dimension(252, 42));
        jLabel1.setMinimumSize(new java.awt.Dimension(252, 42));
        jLabel1.setName("0"); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(252, 42));
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jLabel2.setText("Faculty Name:");

        addFacultyTextField.setColumns(20);
        addFacultyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyTextFieldActionPerformed(evt);
            }
        });

        addFacultyButton.setText("Submit");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(addFacultyButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addFacultyButton)
                .addGap(18, 18, 18)
                .addComponent(addFacultyStatusLabel)
                .addContainerGap(493, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Faculty", jPanel1);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Add a Room");

        jLabel11.setText("Room Name: ");

        addRoomNameTextField.setColumns(10);
        addRoomNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomNameTextFieldActionPerformed(evt);
            }
        });

        jLabel12.setText("# of Seats: ");

        addRoomSeatsTextField.setColumns(10);
        addRoomSeatsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomSeatsTextFieldActionPerformed(evt);
            }
        });

        addRoomButton.setText("Add Room");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        addRoomStatusTextArea.setColumns(20);
        addRoomStatusTextArea.setRows(5);
        jScrollPane3.setViewportView(addRoomStatusTextArea);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Add a Date");

        jLabel14.setText("Date (yyyy-MM-dd): ");

        addDateTextField.setColumns(10);
        addDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateTextFieldActionPerformed(evt);
            }
        });

        addDateButton.setText("Add Date");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Drop a Room");

        jLabel21.setText("Room Name:");

        dropRoomTextField.setColumns(10);
        dropRoomTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomTextFieldActionPerformed(evt);
            }
        });

        dropRoomButton.setText("Drop Room");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addRoomButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addDateButton)
                                    .addComponent(addDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13))
                        .addGap(71, 71, 71))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropRoomButton)
                            .addComponent(dropRoomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(addDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomButton)
                    .addComponent(addDateButton))
                .addGap(59, 59, 59)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dropRoomTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropRoomButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Room/Date Management", jPanel5);

        facultyNameComboBox.setToolTipText("");
        facultyNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyNameComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Reserve a Room");

        jLabel4.setText("Faculty:");

        jLabel5.setText("Date:");

        jLabel6.setText("# of Seats:");

        numSeatsTextField.setColumns(3);
        numSeatsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numSeatsTextFieldActionPerformed(evt);
            }
        });

        reserveButton.setText("Submit");
        reserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtonActionPerformed(evt);
            }
        });

        roomReservationStatusTextArea.setColumns(20);
        roomReservationStatusTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        roomReservationStatusTextArea.setRows(5);
        jScrollPane1.setViewportView(roomReservationStatusTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(reserveButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateReserveComboBox, 0, 161, Short.MAX_VALUE)
                            .addComponent(facultyNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(numSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(facultyNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(dateReserveComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(numSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(reserveButton)
                        .addGap(0, 384, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reserve Room", jPanel2);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Check Status");

        jLabel16.setText("Name:");

        checkStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStatusComboBoxActionPerformed(evt);
            }
        });

        cancelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelComboBoxActionPerformed(evt);
            }
        });

        jLabel17.setText("Reservation:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Cancel Reservation");

        checkStatusTextArea.setColumns(20);
        checkStatusTextArea.setRows(5);
        jScrollPane5.setViewportView(checkStatusTextArea);

        cancelConfirmationButton.setText("OK");
        cancelConfirmationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelConfirmationButtonActionPerformed(evt);
            }
        });

        jLabel19.setText("Would you like to cancel the selected reservation?");

        cancelWaitlistStatusTextArea.setColumns(20);
        cancelWaitlistStatusTextArea.setRows(5);
        jScrollPane7.setViewportView(cancelWaitlistStatusTextArea);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(54, 54, 54)
                        .addComponent(checkStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(cancelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancelConfirmationButton)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(checkStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(cancelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(cancelConfirmationButton)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Status & Cancellations", jPanel6);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Check reservations for any date");

        jLabel8.setText("Date:");

        dateFilterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFilterComboBoxActionPerformed(evt);
            }
        });

        reservationCheckTextArea.setColumns(20);
        reservationCheckTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        reservationCheckTextArea.setRows(5);
        jScrollPane4.setViewportView(reservationCheckTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(dateFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 485, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(dateFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservations", jPanel3);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Full Waitlist");

        waitlistTextArea.setColumns(20);
        waitlistTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        waitlistTextArea.setRows(5);
        jScrollPane2.setViewportView(waitlistTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Waitlist", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(261, 261, 261))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFacultyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFacultyTextFieldActionPerformed

    private void facultyNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyNameComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facultyNameComboBoxActionPerformed

    private void numSeatsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numSeatsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numSeatsTextFieldActionPerformed

    private void reserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtonActionPerformed
        // TODO add your handling code here
        // Gets all the variables from the Reserve tab
        String n = facultyNameComboBox.getItemAt(facultyNameComboBox.getSelectedIndex());
        String str = dateReserveComboBox.getItemAt(dateReserveComboBox.getSelectedIndex());
        java.sql.Date d = java.sql.Date.valueOf(str);
        int s = Integer.parseInt(numSeatsTextField.getText());
        java.sql.Timestamp t = new java.sql.Timestamp(System.currentTimeMillis());
        ArrayList<RoomEntry> availableRooms = RoomQueries.getAllPossibleRooms(d);
        
        // If Faculty tries reserving again for the same date, an error is printed
        if(ReservationQueries.getReservationsByFaculty(n).size() > 0){
            ArrayList<ArrayList<String>> facReservations = 
                    ReservationQueries.getReservationsByFaculty(n);
            System.out.println(java.sql.Date.valueOf(facReservations.get(0).get(2)));
            for(int i = 0; i < facReservations.size(); i++){
                if(java.sql.Date.valueOf(facReservations.get(i).get(2)).equals(d)){
                    roomReservationStatusTextArea.setText("Room already reserved for " + d +
                            "\nPlease cancel existing reservation to reserve for " + d + "\n");
                    return;
                }
            }
        }
        // If no more available rooms for the date, a WaitlistEntry is inserted and displayed
        if(availableRooms.size() == 0 && WaitlistQueries.getFullWaitlist().indexOf(n) < 0 &&
                WaitlistQueries.getFullWaitlist().indexOf(d) < 0){
            WaitlistQueries.addWaitlistEntry(new WaitlistEntry(n, d, s, t));
            roomReservationStatusTextArea.setText("No Available Rooms for " + d + ".\nPlaced on waitlist:\n" +
                    "Name: " + n + "\nRequested Seats: " + s +"\n");
            addRoomStatusTextArea.append("No Available Rooms for " + d + ".\nPlaced on waitlist:\n" +
                    "Name: " + n + "\nRequested Seats: " + s +"\n\n");
//            ArrayList<ArrayList<String>> w = WaitlistQueries.getFullWaitlist();
//            String waitlistMessage = "";
//            for(int i = 0; i < w.size(); i++){
//                waitlistMessage += (i+1) + ") " + w.get(i).get(0) + " - Request for " 
//                        + w.get(i).get(2) + " seats on " + w.get(i).get(1) + "\n\n";
//            }
//            waitlistTextArea.setText(waitlistMessage);
            setWaitlistText();
            return;
        }
        // Calculates the smallest available room for the Faculty member
        int diff = 100;
        RoomEntry assignedRoom = null;
        for(int i = 0; i < availableRooms.size(); i++){
            int x = availableRooms.get(i).getSeats() - s;
            if(x < diff && x >= 0){
                diff = x;
                assignedRoom = availableRooms.get(i);
            }
        }
        // Adds new ReservationEntry, updates status text, and updates Reservations list
        System.out.println(assignedRoom);
        if(availableRooms.indexOf(assignedRoom) >= 0 && assignedRoom != null){
            ReservationQueries.addReservation(new ReservationEntry(n, assignedRoom.getName(), s, d, t));
            roomReservationStatusTextArea.setText("Reservation Details:\n" + "Name: " + n + "\nReserved Date: "
                    + d + "\nReserved Room: " + assignedRoom.getName() + " (Seats: " + assignedRoom.getSeats() + ")\n");
            addRoomStatusTextArea.append("New Reservation Details:\n" + "Name: " + n + "\nReserved Date: "
                    + d + "\nReserved Room: " + assignedRoom.getName() + " (Seats: " + assignedRoom.getSeats() + ")\n\n");
            setWaitlistText();
        }else{
            WaitlistQueries.addWaitlistEntry(new WaitlistEntry(n, d, s, t));
            roomReservationStatusTextArea.setText("No Available Rooms for " + d + " with " + s +
                    " seats.\nPlaced on waitlist:\n" + "Name: " + n + "\nRequested Seats: " + s +"\n");
            addRoomStatusTextArea.append("No Available Rooms for " + d + " with " + s +
                    " seats.\nPlaced on waitlist:\n" + "Name: " + n + "\nRequested Seats: " + s +"\n\n");
            setWaitlistText();
            return;
        }
        this.dateFilterComboBoxActionPerformed(evt);
        checkStatusComboBoxActionPerformed(evt);
    }//GEN-LAST:event_reserveButtonActionPerformed

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyButtonActionPerformed
        // TODO add your handling code here:
        // Adds Faculty to database and updates status label
        String name = addFacultyTextField.getText();
        //Faculty x = new Faculty(new DBConnection());
        Faculty.addFaculty(name);
        addFacultyStatusLabel.setText(name + " has been added to the database.");
        facultyNameComboBox.removeAllItems();
        checkStatusComboBox.removeAllItems();
        checkStatusComboBox.addItem("");
        ArrayList<String> f = Faculty.getAllFaculty();
        for(int i = 0; i < f.size(); i++){
            facultyNameComboBox.addItem(f.get(i));
            checkStatusComboBox.addItem(f.get(i));
        }
    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void dateFilterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFilterComboBoxActionPerformed
        // TODO add your handling code here:
        // Retrieves the proper reservations for the selected date
        String str = String.valueOf(dateFilterComboBox.getSelectedItem());
        if(!str.equals("null")){
            ArrayList<ArrayList<String>> r = 
                ReservationQueries.getReservationsByDate(java.sql.Date.valueOf(str));
            str = new String();
            for(int i = 0; i < r.size(); i++){
                str += "(" + r.get(i).get(2) + ") Reservation - " + r.get(i).get(0) + " in Room " 
                        + r.get(i).get(1) + " (Seats Requested: " + r.get(i).get(3) + ")" + "\n\n";
            }
        }
        reservationCheckTextArea.setText(str);
    }//GEN-LAST:event_dateFilterComboBoxActionPerformed

    private void addRoomNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomNameTextFieldActionPerformed

    private void addRoomSeatsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomSeatsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomSeatsTextFieldActionPerformed

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
        // Adds room to database and check waitlist to see if any entries can be made reservations
        int seats = Integer.parseInt(addRoomSeatsTextField.getText());
        String roomName = addRoomNameTextField.getText();
        RoomQueries.addRoom(new RoomEntry(roomName, seats));
        String msg = "Room " + roomName + " with " + seats + " seats added.\n\n";
        ArrayList<String> openPositions = WaitlistQueries.checkWaitlist(true, seats, null);
        for(int i = 0; i < openPositions.size(); i+=3){
            java.sql.Date d = java.sql.Date.valueOf(openPositions.get(i+1));
            WaitlistQueries.deleteWaitlistEntry(openPositions.get(i), d);
            ReservationQueries.addReservation(new ReservationEntry(openPositions.get(i), 
                    roomName, Integer.parseInt(openPositions.get(i+2)), d, new java.sql.Timestamp(System.currentTimeMillis())));
            msg += openPositions.get(i) + "'s request taken of waitlist. Now reserved for " +
                    d + " in Room " + roomName + " (" + seats + " seats).\n\nPlease check Reservations tab for confirmation.\n\n";
        }
        addRoomStatusTextArea.setText(msg);
        setWaitlistText();
        dateFilterComboBoxActionPerformed(evt);
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void addDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDateTextFieldActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        // TODO add your handling code here:
        // Adds a date for reserving to database
        java.sql.Date d = java.sql.Date.valueOf(addDateTextField.getText());
        Dates.addDate(d);
        java.text.SimpleDateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd");
        dateReserveComboBox.addItem(df.format(d));
        dateFilterComboBox.addItem(df.format(d));
        addRoomStatusTextArea.setText("Date (" + d + ") succesfully added and open for reservations.\n\n");
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void cancelConfirmationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelConfirmationButtonActionPerformed
        // TODO add your handling code here:
        // Confirms that reservation/entry to be cancelled
        // Reservation/Waitlist deleted from database and any new reservations made for those in waitlist
        cancelWaitlistStatusTextArea.setText("");
        if(cancelComboBox.getSelectedItem() != ""){
            String full = cancelComboBox.getItemAt(cancelComboBox.getSelectedIndex());
            String name = checkStatusComboBox.getItemAt(checkStatusComboBox.getSelectedIndex());
            java.sql.Date date = java.sql.Date.valueOf(full.substring(1, 11));
            // For waitlist cancellations
            if(full.contains("Waitlist")){
                WaitlistQueries.deleteWaitlistEntry(name, date);
                cancelWaitlistStatusTextArea.setText("Waitlist Entry for " + date + " cancelled.\n\n");
                checkStatusComboBoxActionPerformed(evt);
                dateFilterComboBoxActionPerformed(evt);
                setWaitlistText();
                return;
            }
            // For reservation cancellations
            ArrayList<ArrayList<String>> r = ReservationQueries.getReservationsByFaculty(name);
            int index;
            for(index = 0; index < r.size(); index++){
                if(r.get(index).indexOf(full.substring(1, 11)) >= 0){
                    System.out.println("AAAA");
                    break;
                }
            }
            System.out.println(index);
            String roomName = r.get(index).get(1);
            int seats = Integer.parseInt(r.get(index).get(3));
            ReservationQueries.deleteReservation(name, date, null);
            cancelWaitlistStatusTextArea.setText("Reservation for  " + date + " cancelled.\n\n");
            ArrayList<String> open = WaitlistQueries.checkWaitlist(false, seats, date);
            if(open.size() > 0){
                ReservationQueries.addReservation(new ReservationEntry(open.get(0), roomName, Integer.parseInt(open.get(1)), 
                        date, new java.sql.Timestamp(System.currentTimeMillis())));
                roomReservationStatusTextArea.setText("Reservation Details:\n" + "Name: " + open.get(0) + "\nReserved Date: "
                    + date + "\nReserved Room: " + roomName + " (Seats Requested: " + seats + ")\n");
                cancelWaitlistStatusTextArea.append(open.get(0) + "'s request taken of waitlist. \nNow reserved for " +
                    date + " in Room " + roomName + "\n(Requested " + seats + " seats).\n\nPlease check Reservations tab for confirmation.\n\n");
            }
            checkStatusComboBoxActionPerformed(evt);
            dateFilterComboBoxActionPerformed(evt);
            setWaitlistText();
        }
    }//GEN-LAST:event_cancelConfirmationButtonActionPerformed

    private void checkStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStatusComboBoxActionPerformed
        // TODO add your handling code here:
        // Displays status of all reservations and waitlist positions for chosen faculty
        // Places reservations and waitlist entries into cancellation combo box for easier choosing
        cancelComboBox.removeAllItems();
        cancelComboBox.addItem("");
        if(checkStatusComboBox.getSelectedItem() != ""){
            String faculty = checkStatusComboBox.getItemAt(checkStatusComboBox.getSelectedIndex());
            ArrayList<ArrayList<String>> details = 
                    ReservationQueries.getReservationsByFaculty(faculty);
            String msg = "";
            for(int i = 0; i < details.size(); i++){
                msg += "Reservation on " + details.get(i).get(2) + ": Room " + 
                        details.get(i).get(1) + "\n\n- " + details.get(i).get(3) + " seats requested\n\n";
                cancelComboBox.addItem("(" + details.get(i).get(2) + ") - Reservation");
            }
            details.clear();
            details = WaitlistQueries.getWaitlistByFaculty(faculty);
            for(int i = 0; i < details.size(); i++){
                msg += "Waitlist Entry: " + details.get(i).get(1) + "\n\n            " +
                        "             " + details.get(i).get(2) + " seats requested\n\n";
                cancelComboBox.addItem("(" + details.get(i).get(1) + ") - Waitlist Entry");
            }
            checkStatusTextArea.setText(msg);
        }else{
            checkStatusTextArea.setText("");
        }
    }//GEN-LAST:event_checkStatusComboBoxActionPerformed

    private void cancelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelComboBoxActionPerformed

    private void dropRoomTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropRoomTextFieldActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed
        // TODO add your handling code here:
        // Drops room and alters reservations/waitlists properly
        String roomName = dropRoomTextField.getText();
        RoomQueries.dropRoom(roomName);
        addRoomStatusTextArea.setText("Room " + roomName + " dropped.\n\n");
        ArrayList<String> affected = ReservationQueries.getReservationsByRoom(roomName);
        ReservationQueries.deleteReservation(null, null, roomName);
        for(int i = 0; i < affected.size(); i+=3){
            facultyNameComboBox.setSelectedItem(affected.get(i));
            dateReserveComboBox.setSelectedItem(affected.get(i+1));
            numSeatsTextField.setText(affected.get(i+2));
            addRoomStatusTextArea.append(affected.get(i) + "'s reservation changed.\n");
            reserveButtonActionPerformed(evt);
        }
        checkStatusComboBoxActionPerformed(evt);
        dateFilterComboBoxActionPerformed(evt);
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    /**
     * Function to make it easier to display waitlist in the Waitlist tab
     * Allows for reduced redundancy
     */
    public void setWaitlistText(){
        ArrayList<ArrayList<String>> w = WaitlistQueries.getFullWaitlist();
        String msg  = "";
        for(int i = 0; i < w.size(); i++){
            msg += (i+1) + ") " + w.get(i).get(0) + " - Request for " 
                        + w.get(i).get(2) + " seats on " + w.get(i).get(1) + "\n\n";
        }
        waitlistTextArea.setText(msg);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RoomSchedulerGUI dialog = new RoomSchedulerGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDateButton;
    private javax.swing.JTextField addDateTextField;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JTextField addRoomNameTextField;
    private javax.swing.JTextField addRoomSeatsTextField;
    private javax.swing.JTextArea addRoomStatusTextArea;
    private javax.swing.JComboBox<String> cancelComboBox;
    private javax.swing.JButton cancelConfirmationButton;
    private javax.swing.JTextArea cancelWaitlistStatusTextArea;
    private javax.swing.JComboBox<String> checkStatusComboBox;
    private javax.swing.JTextArea checkStatusTextArea;
    private javax.swing.JComboBox<String> dateFilterComboBox;
    private javax.swing.JComboBox<String> dateReserveComboBox;
    private javax.swing.JButton dropRoomButton;
    private javax.swing.JTextField dropRoomTextField;
    private javax.swing.JComboBox<String> facultyNameComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField numSeatsTextField;
    private javax.swing.JTextArea reservationCheckTextArea;
    private javax.swing.JButton reserveButton;
    private javax.swing.JTextArea roomReservationStatusTextArea;
    private javax.swing.JTextArea waitlistTextArea;
    // End of variables declaration//GEN-END:variables
}
